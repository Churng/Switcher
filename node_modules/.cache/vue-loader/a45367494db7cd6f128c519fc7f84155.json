{"remainingRequest":"/Users/yuhsuanlee/Switcher/main_vue/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/yuhsuanlee/Switcher/main_vue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yuhsuanlee/Switcher/main_vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuhsuanlee/Switcher/main_vue/src/components/back_side/OrderDetails.vue?vue&type=template&id=23032fa4&","dependencies":[{"path":"/Users/yuhsuanlee/Switcher/main_vue/src/components/back_side/OrderDetails.vue","mtime":1592709203788},{"path":"/Users/yuhsuanlee/Switcher/main_vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuhsuanlee/Switcher/main_vue/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/yuhsuanlee/Switcher/main_vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuhsuanlee/Switcher/main_vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}